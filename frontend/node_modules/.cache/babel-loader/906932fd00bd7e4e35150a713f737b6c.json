{"ast":null,"code":"var _jsxFileName = \"C:\\\\important\\\\Pycharm-projects\\\\AggregatorProject\\\\frontend\\\\src\\\\components\\\\NovelsGrid.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport axios from \"axios\";\nimport { CardHeader } from \"@material-ui/core\";\nconst media = {\n  width: \"200px\",\n  height: \"300px\",\n  float: \"left\",\n  padding: 10,\n  display: \"block\",\n  marginLeft: \"auto\",\n  marginRight: \"auto\"\n};\nconst card = {\n  width: 1000,\n  backgroundColor: \"#CBCACA\"\n};\n\nclass NovelsGrid extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      spacing: 4,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://127.0.0.1:8000/api/novels').then(response => {\n      this.setState({\n        items: response.data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      spacing: this.state.spacing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.state.items.map(value => {\n      return React.createElement(Grid, {\n        key: value.id,\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: card,\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(CardActionArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(CardMedia, {\n        style: media,\n        component: \"img\",\n        image: value.image,\n        title: value.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        gutterBottom: true,\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, value.name), React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, value.chcount)))));\n    }))));\n  }\n\n}\n\nexport default NovelsGrid;","map":{"version":3,"sources":["C:/important/Pycharm-projects/AggregatorProject/frontend/src/components/NovelsGrid.js"],"names":["React","Grid","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","axios","CardHeader","media","width","height","float","padding","display","marginLeft","marginRight","card","backgroundColor","NovelsGrid","Component","constructor","state","spacing","items","componentDidMount","get","then","response","setState","data","render","map","value","id","image","name","chcount"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport axios from \"axios\";\r\nimport {CardHeader} from \"@material-ui/core\";\r\n\r\nconst media = {\r\n    width: \"200px\",\r\n    height: \"300px\",\r\n    float: \"left\",\r\n    padding: 10,\r\n    display: \"block\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\"\r\n}\r\n\r\nconst card = {\r\n    width: 1000,\r\n    backgroundColor: \"#CBCACA\"\r\n}\r\n\r\nclass NovelsGrid extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            spacing: 4,\r\n            items: [],\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://127.0.0.1:8000/api/novels').then(response => {\r\n            this.setState({items: response.data});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid container>\r\n                <Grid item xs = {12}>\r\n                    <Grid container justify=\"center\" spacing={this.state.spacing}>\r\n                        {this.state.items.map(value => {\r\n                            return (\r\n                                <Grid key={value.id} item>\r\n                                    <Card style={card} variant=\"outlined\">\r\n                                        <CardActionArea>\r\n                                            <CardMedia\r\n                                                style={media}\r\n                                                component=\"img\"\r\n                                                image={value.image}\r\n                                                title={value.name}\r\n                                            />\r\n                                            <CardContent>\r\n                                                <Typography gutterBottom variant=\"h6\">\r\n                                                    {value.name}\r\n                                                </Typography>\r\n                                                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\r\n                                                    {value.chcount}\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                                </Grid>\r\n                            );\r\n                        })}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NovelsGrid;\r\n"]},"metadata":{},"sourceType":"module"}