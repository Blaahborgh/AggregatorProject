{"ast":null,"code":"import _slicedToArray from \"C:\\\\important\\\\Pycharm-projects\\\\AggregatorProject\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\important\\\\Pycharm-projects\\\\AggregatorProject\\\\frontend\\\\src\\\\components\\\\NovelsGrid.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Link from \"@material-ui/core/Link\";\nimport { Router, Route } from \"react-router-dom\";\nimport Novel from \"./Novel\";\nimport clsx from \"clsx\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  media: {\n    width: \"200px\",\n    height: \"300px\",\n    float: \"left\",\n    padding: 10,\n    display: \"block\"\n  },\n  card: {\n    width: 1000,\n    backgroundColor: \"#CBCACA\"\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginRight: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  }\n}));\nexport default function SpacingGrid(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        expanded = _React$useState2[0],\n        setExpanded = _React$useState2[1];\n\n  const handleExpandClick = id => {\n    setExpanded(expanded === id ? false : id);\n  };\n\n  return React.createElement(Grid, {\n    container: true,\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, props.novels.map(value => {\n    return React.createElement(Grid, {\n      key: value.id,\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.card,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(CardMedia, {\n      className: classes.media,\n      component: \"img\",\n      image: value.image,\n      title: value.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/novel/\" + value.id + \"/\" + value.name.replace(/ /gi, \"_\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Novel, {\n      novels: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"/novel/\" + value.id + \"/\" + value.name.replace(/ /gi, \"_\"),\n      color: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, value.name)), React.createElement(Typography, {\n      variant: \"body1\",\n      color: \"textSecondary\",\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, value.author), React.createElement(Typography, {\n      variant: \"body1\",\n      color: \"textSecondary\",\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, value.chcount)), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      className: clsx(classes.expand, {\n        [classes.expandOpen]: expanded\n      }),\n      onClick: () => handleExpandClick(value.id),\n      \"aria-expanded\": expanded === value.id,\n      \"aria-label\": \"show description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(ExpandMoreIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }))), React.createElement(Collapse, {\n      in: expanded === value.id,\n      timeout: \"auto\",\n      unmountOnExit: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      color: \"textSecondary\",\n      component: \"p\",\n      style: {\n        whiteSpace: \"pre-line\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, value.desc)))));\n  }))));\n}","map":{"version":3,"sources":["C:/important/Pycharm-projects/AggregatorProject/frontend/src/components/NovelsGrid.js"],"names":["React","makeStyles","Grid","Typography","Card","CardMedia","CardContent","CardActions","IconButton","ExpandMoreIcon","Collapse","Link","Router","Route","Novel","clsx","useStyles","theme","root","flexGrow","media","width","height","float","padding","display","card","backgroundColor","expand","transform","marginRight","transition","transitions","create","duration","shortest","expandOpen","SpacingGrid","props","classes","useState","expanded","setExpanded","handleExpandClick","id","novels","map","value","image","name","replace","author","chcount","whiteSpace","desc"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Link from \"@material-ui/core/Link\";\r\nimport { Router, Route } from \"react-router-dom\"\r\nimport Novel from \"./Novel\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    media: {\r\n        width: \"200px\",\r\n        height: \"300px\",\r\n        float: \"left\",\r\n        padding: 10,\r\n        display: \"block\",\r\n    },\r\n    card: {\r\n        width: 1000,\r\n        backgroundColor: \"#CBCACA\"\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginRight: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n}));\r\n\r\nexport default function SpacingGrid(props) {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = (id) => {\r\n        setExpanded(expanded === id ? false : id);\r\n    };\r\n\r\n    return (\r\n        <Grid container className={classes.root}>\r\n            <Grid item xs={12}>\r\n                <Grid container justify=\"center\" spacing={4}>\r\n                    {props.novels.map(value => {\r\n                        return (\r\n                            <Grid key={value.id} item>\r\n                                <Card className={classes.card} variant=\"outlined\">\r\n                                    <CardMedia\r\n                                        className={classes.media}\r\n                                        component=\"img\"\r\n                                        image={value.image}\r\n                                        title={value.name}\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Route exact path={\"/novel/\"+value.id+\"/\"+value.name.replace(/ /gi, \"_\")}>\r\n                                            <Novel novels={value}/>\r\n                                        </Route>\r\n                                        <Typography gutterBottom variant=\"h6\">\r\n                                            <Link href={\"/novel/\"+value.id+\"/\"+value.name.replace(/ /gi, \"_\")} color=\"inherit\">\r\n                                                {value.name}\r\n                                            </Link>\r\n                                        </Typography>\r\n                                        <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\r\n                                            {value.author}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\r\n                                            {value.chcount}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                    <CardActions>\r\n                                        <IconButton\r\n                                            className={clsx(classes.expand, {\r\n                                                [classes.expandOpen]: expanded,\r\n                                            })}\r\n                                            onClick={() => handleExpandClick(value.id)}\r\n                                            aria-expanded={expanded === value.id}\r\n                                            aria-label=\"show description\"\r\n                                        >\r\n                                            <ExpandMoreIcon/>\r\n                                        </IconButton>\r\n                                    </CardActions>\r\n                                    <Collapse in={expanded === value.id} timeout=\"auto\" unmountOnExit>\r\n                                        <CardContent>\r\n                                            <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\"\r\n                                                        style={{whiteSpace: \"pre-line\"}}>\r\n                                                {value.desc}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                    </Collapse>\r\n                                </Card>\r\n                            </Grid>\r\n                        );\r\n                    })}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}