{"ast":null,"code":"var _jsxFileName = \"C:\\\\important\\\\Pycharm-projects\\\\AggregatorProject\\\\frontend\\\\src\\\\components\\\\NovelsGrid.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport axios from \"axios\";\n\nclass NovelsGrid extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      classes: makeStyles(theme => ({\n        root: {\n          flexGrow: 1,\n          maxWidth: 345\n        },\n        paper: {\n          height: 500,\n          width: 500\n        }\n      })),\n      spacing: 10,\n      items: [],\n      cardstyle: makeStyles({\n        root: {\n          maxWidth: 340\n        }\n      })\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://127.0.0.1:8000/api/novels').then(response => {\n      this.setState({\n        items: response.data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      container: true,\n      className: this.state.classes.root,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      spacing: this.state.spacing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.state.items.map(value => {\n      return React.createElement(Card, {\n        key: value.id,\n        maxWidth: \"340\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(CardActionArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(CardMedia, {\n        component: \"img\",\n        height: \"200\",\n        image: value.image,\n        title: value.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"h2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, value.name), React.createElement(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, value.desc)), React.createElement(CardActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Button, {\n        size: \"small\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"More\"))));\n    }))));\n  }\n\n}\n\nexport default NovelsGrid;","map":{"version":3,"sources":["C:/important/Pycharm-projects/AggregatorProject/frontend/src/components/NovelsGrid.js"],"names":["React","makeStyles","Grid","Paper","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","axios","NovelsGrid","Component","constructor","state","classes","theme","root","flexGrow","maxWidth","paper","height","width","spacing","items","cardstyle","componentDidMount","get","then","response","setState","data","render","map","value","id","image","name","desc"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport axios from \"axios\";\r\n\r\nclass NovelsGrid extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            classes: makeStyles(theme => ({\r\n                root: {\r\n                    flexGrow: 1,\r\n                    maxWidth: 345\r\n                },\r\n                paper: {\r\n                    height: 500,\r\n                    width: 500,\r\n                },\r\n            })),\r\n            spacing: 10,\r\n            items: [],\r\n            cardstyle: makeStyles({\r\n                root: {\r\n                    maxWidth: 340,\r\n                },\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://127.0.0.1:8000/api/novels').then(response => {\r\n            this.setState({ items: response.data });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid container className={this.state.classes.root} spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justify=\"center\" spacing={this.state.spacing}>\r\n                        {this.state.items.map(value => {\r\n                            return (\r\n                                <Card key={value.id} maxWidth=\"340\">\r\n                                    <CardActionArea>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            height=\"200\"\r\n                                            image={value.image}\r\n                                            title={value.name}\r\n                                        />\r\n                                        <CardContent>\r\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                {value.name}\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                                {value.desc}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        <CardActions>\r\n                                            <Button size=\"small\" color=\"primary\">\r\n                                                More\r\n                                            </Button>\r\n                                        </CardActions>\r\n                                    </CardActionArea>\r\n                                </Card>\r\n                            )\r\n                        })}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NovelsGrid;\r\n"]},"metadata":{},"sourceType":"module"}