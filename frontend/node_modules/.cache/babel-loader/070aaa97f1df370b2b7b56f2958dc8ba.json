{"ast":null,"code":"var _jsxFileName = \"C:\\\\important\\\\Pycharm-projects\\\\AggregatorProject\\\\frontend\\\\src\\\\components\\\\NovelsGrid.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport axios from \"axios\";\n\nclass NovelsGrid extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      classes: makeStyles({\n        root: {\n          flexGrow: 1\n        }\n      }),\n      spacing: 10,\n      items: [],\n      card: makeStyles({\n        root: {\n          width: 300\n        }\n      })\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://127.0.0.1:8000/api/novels').then(response => {\n      this.setState({\n        items: response.data\n      });\n    });\n  }\n\n  render() {\n    const theme = createMuiTheme({\n      spacing: 8\n    });\n    return React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      spacing: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.state.items.map(value => {\n      return React.createElement(Grid, {\n        key: value.id,\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: this.state.card.root,\n        style: {\n          width: 300\n        },\n        key: value.id,\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(CardActionArea, {\n        className: this.state.card.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(CardMedia, {\n        component: \"img\",\n        height: \"300\",\n        image: value.image,\n        title: value.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(CardContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        gutterBottom: true,\n        variant: \"h6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, value.name), React.createElement(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        component: \"p\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, value.desc)))));\n    }))));\n  }\n\n}\n\nexport default NovelsGrid;","map":{"version":3,"sources":["C:/important/Pycharm-projects/AggregatorProject/frontend/src/components/NovelsGrid.js"],"names":["React","makeStyles","Grid","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","axios","NovelsGrid","Component","constructor","state","classes","root","flexGrow","spacing","items","card","width","componentDidMount","get","then","response","setState","data","render","theme","createMuiTheme","map","value","id","image","name","desc"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport axios from \"axios\";\r\n\r\nclass NovelsGrid extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            classes: makeStyles({\r\n                root: {\r\n                    flexGrow: 1,\r\n                },\r\n            }),\r\n            spacing: 10,\r\n            items: [],\r\n            card: makeStyles({\r\n                root: {\r\n                    width: 300,\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://127.0.0.1:8000/api/novels').then(response => {\r\n            this.setState({items: response.data});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const theme = createMuiTheme({\r\n            spacing: 8\r\n        })\r\n        return (\r\n            <Grid container spacing={4}>\r\n                <Grid item xs = {12}>\r\n                    <Grid container justify=\"center\" spacing={16}>\r\n                        {this.state.items.map(value => {\r\n                            return (\r\n                                <Grid key={value.id} item>\r\n                                    <Card className={this.state.card.root} style={{width: 300}} key={value.id} variant=\"outlined\">\r\n                                        <CardActionArea className={this.state.card.root}>\r\n                                            <CardMedia\r\n                                                component=\"img\"\r\n                                                height=\"300\"\r\n                                                image={value.image}\r\n                                                title={value.name}\r\n                                            />\r\n                                            <CardContent>\r\n                                                <Typography gutterBottom variant=\"h6\">\r\n                                                    {value.name}\r\n                                                </Typography>\r\n                                                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\r\n                                                    {value.desc}\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                                </Grid>\r\n                            );\r\n                        })}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NovelsGrid;\r\n"]},"metadata":{},"sourceType":"module"}