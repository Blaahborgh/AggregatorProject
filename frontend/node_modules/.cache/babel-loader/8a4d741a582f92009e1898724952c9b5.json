{"ast":null,"code":"var _jsxFileName = \"C:\\\\important\\\\Pycharm-projects\\\\AggregatorProject\\\\frontend\\\\src\\\\components\\\\Novel.js\";\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Link from \"@material-ui/core/Link\";\nimport CardContent from \"@material-ui/core/CardContent\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  image: {\n    width: \"200px\",\n    height: \"300px\",\n    float: \"left\",\n    padding: 10,\n    display: \"block\"\n  },\n  tags: {\n    display: \"inline\",\n    border: \"1px solid #000\",\n    padding: \"3px\",\n    marginRight: \"5px\",\n    lineHeight: \"250%\",\n    whiteSpace: \"normal\"\n  }\n}));\nexport default function Novel(props) {\n  const classes = useStyles();\n  return React.createElement(Grid, {\n    container: true,\n    className: classes.root,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: classes.image,\n    src: props.novel.image,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    display: \"inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, props.novel.name), React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textSecondary\",\n    component: \"p\",\n    display: \"inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \" by \"), React.createElement(Typography, {\n    variant: \"h6\",\n    display: \"inline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, props.novel.author), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), props.novel.tags.map(tag => {\n    return React.createElement(Typography, {\n      key: tag,\n      className: classes.tags,\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, tag);\n  }), React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textSecondary\",\n    component: \"p\",\n    justify: \"flex-end\",\n    style: {\n      whiteSpace: \"pre-line\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, props.novel.desc)));\n}","map":{"version":3,"sources":["C:/important/Pycharm-projects/AggregatorProject/frontend/src/components/Novel.js"],"names":["React","Grid","makeStyles","Typography","Link","CardContent","useStyles","theme","root","flexGrow","image","width","height","float","padding","display","tags","border","marginRight","lineHeight","whiteSpace","Novel","props","classes","novel","name","author","map","tag","desc"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from \"@material-ui/core/Link\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    image: {\r\n        width: \"200px\",\r\n        height: \"300px\",\r\n        float: \"left\",\r\n        padding: 10,\r\n        display: \"block\",\r\n    },\r\n    tags: {\r\n        display: \"inline\",\r\n        border: \"1px solid #000\",\r\n        padding: \"3px\",\r\n        marginRight: \"5px\",\r\n        lineHeight: \"250%\",\r\n        whiteSpace: \"normal\"\r\n    },\r\n}))\r\n\r\nexport default function Novel(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container className={classes.root} justify=\"center\">\r\n            <Grid item xs={6}>\r\n                <img className={classes.image} src={props.novel.image} alt=\"\"/>\r\n                <Typography gutterBottom variant=\"h5\" display=\"inline\">\r\n                    {props.novel.name}\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\"\r\n                            display=\"inline\">\r\n                    {\" by \"}\r\n                </Typography>\r\n                <Typography variant=\"h6\" display=\"inline\">\r\n                    {props.novel.author}\r\n                </Typography>\r\n                <Typography></Typography>\r\n                {props.novel.tags.map(tag => {\r\n                    return (\r\n                        <Typography key={tag} className={classes.tags}\r\n                                    variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {tag}\r\n                        </Typography>\r\n                    )\r\n                })}\r\n                <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\" justify=\"flex-end\" style={{whiteSpace: \"pre-line\"}}>\r\n                    {props.novel.desc}\r\n                </Typography>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}